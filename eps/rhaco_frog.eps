%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 257 192
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 257 192
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.3165327 0.88709676 0.44101888 sc
q
0 0 256.25998 191.78676 rc
22.889954 124.78226 m
22.55661 134.44894 20.051971 144.28607 21.889954 153.78226 c
23.889954 164.11559 26.905518 168.12466 34.889954 172.78226 c
42.889954 177.44893 49.889954 178.11559 57.889954 177.78226 c
67.292206 177.3905 75.223267 176.44893 83.889954 172.78226 c
88.223267 171.44893 92.556641 170.11559 96.889954 168.78226 c
114.22327 168.44893 131.55664 168.11559 148.88995 167.78226 c
153.55661 170.44893 158.44537 172.75993 162.88995 175.78226 c
171.2233 181.44893 171.89996 182.34386 180.88995 183.78226 c
189.2233 185.11559 197.55661 183.44893 204.88995 180.78226 c
208.87717 179.33237 214.66641 174.39554 216.88995 170.78226 c
219.55661 166.44893 218.2233 161.11559 217.88995 153.78226 c
217.2233 146.44894 216.55661 139.11557 215.88995 131.78226 c
220.55661 126.78226 225.40207 121.94333 229.88995 116.78226 c
236.55661 109.11557 244.2233 98.448944 246.88995 87.782257 c
249.15359 78.7276 247.88995 69.115601 246.88995 59.782257 c
245.76138 49.249054 240.2233 38.448914 233.88995 30.782257 c
225.98932 21.218353 212.55661 17.115601 201.88995 11.782257 c
190.02029 5.8474121 176.88995 5.4489136 162.88995 3.7822571 c
140.71075 1.1419067 117.22327 1.1156006 95.889954 2.7822571 c
81.218842 3.9284363 64.223267 8.4489136 52.889954 12.782257 c
41.886444 16.989502 26.153061 22.297943 20.889954 27.782257 c
16.200012 32.669312 8.2232971 48.448914 4.8899536 61.782257 c
2.3837585 71.807068 2.5232239 82.723602 4.8899536 92.782257 c
7.5566101 104.11557 14.223297 109.44894 18.889954 117.78226 c
h
22.889954 124.78226 m
f*
/Cs2 SC
0 sc
243.0397 114.4166 m
248.00912 106.67125 253.53607 96.519348 254.73947 85.195312 c
255.37662 79.201294 254.87177 73.307495 254.15149 67.613586 c
253.21902 60.244049 251.97855 51.942291 248.68063 44.439423 c
245.07211 36.230377 240.5499 29.007416 233.87503 23.216278 c
227.20013 17.42511 219.44885 14.120819 212.80307 11.163483 c
219.02011 13.535522 226.30524 16.288757 233.05844 21.395782 c
239.81165 26.502808 244.75113 33.405273 248.75333 41.410828 c
252.40961 48.724701 254.13684 57.031464 255.12561 64.427185 c
255.88919 70.139221 256.56433 76.043884 256.11636 82.395996 c
255.27069 94.391418 249.1102 105.96451 243.0397 114.4166 c
25.185303 131.70145 m
24.139511 140.18921 22.60833 147.79857 24.782471 156.98058 c
25.869537 161.57158 27.260422 164.42557 29.865158 167.05711 c
32.469894 169.68866 37.083969 172.61703 41.302704 174.29553 c
47.947403 176.93921 54.729034 176.97295 62.186615 176.59692 c
69.644196 176.2209 76.330978 175.23668 83.672897 172.26851 c
83.702454 172.25101 l
83.725937 172.24921 l
88.015884 171.00859 92.410721 169.73509 96.792831 168.46661 c
96.827454 168.45413 l
96.883606 168.45207 l
98.916489 168.44699 100.95505 168.44196 102.99951 168.43721 c
112.41608 168.41504 129.93112 168.19685 148.8923 167.90591 c
148.8286 167.88966 l
151.79645 169.60098 154.90295 171.18983 157.92236 172.91335 c
160.94177 174.63686 164.66928 177.2607 167.58832 179.20226 c
170.50735 181.14381 172.4025 182.1357 175.3418 182.90263 c
178.2811 183.66957 182.47595 184.3481 185.72156 184.44534 c
198.70395 184.83429 208.73053 179.81769 213.76074 174.78282 c
219.04523 169.49345 218.44452 163.8416 218.01654 153.77829 c
218.01495 153.78226 l
218.0163 153.77219 l
217.3833 146.50804 216.75616 139.02826 216.15823 131.75786 c
216.08685 131.96605 l
223.89389 123.74428 231.32263 116.43454 236.71289 109.1517 c
233.24658 114.07162 225.8588 122.34131 216.6712 132.51108 c
216.95395 131.68524 l
217.68878 138.53479 218.50351 146.16357 219.30563 153.65355 c
219.31183 153.71976 l
219.31003 153.71727 l
219.82892 162.64679 220.97464 169.37886 215.65219 175.14691 c
210.32974 180.91496 203.3129 183.79007 196.79156 185.23254 c
190.27023 186.67502 183.69049 186.58473 177.81549 185.5314 c
171.94046 184.47807 169.52713 183.01529 166.89389 181.29712 c
163.94705 179.37433 160.21216 176.69693 157.19174 174.95662 c
154.17133 173.21631 150.96376 171.57869 147.77625 169.73193 c
148.93314 170.02718 l
132.61832 170.24373 116.68512 170.35622 100.84023 170.36862 c
99.535263 170.36966 98.228455 170.37016 96.920425 170.37015 c
97.356995 170.3002 l
93.004639 171.54825 88.730743 172.76505 84.273926 174.03017 c
84.398117 173.98494 l
76.258835 177.23141 68.807892 178.10329 60.631851 178.33214 c
52.455795 178.56099 45.421143 178.04857 38.341507 174.45341 c
34.072311 172.28529 30.117783 169.37282 27.892563 166.49184 c
25.667343 163.61086 24.503738 160.28389 23.643158 155.39195 c
21.921982 145.60806 23.942047 139.45509 25.185303 131.70145 c
174.45142 2.8065186 m
158.37247 1.7003174 140.62108 0.72628784 122.38393 1.2217102 c
111.96642 1.5046387 101.77556 1.8123169 90.485138 3.29422 c
79.194672 4.776123 67.033554 7.8731995 57.654831 11.005249 c
48.151886 14.178772 34.500015 18.833649 25.69841 23.736389 c
21.297607 26.187775 19.360107 28.237488 16.759705 32.106018 c
14.159279 35.974579 11.324234 41.212036 8.8461304 46.697937 c
4.3591614 56.631775 1.5445023 66.217072 0.92655945 75.321777 c
0.30861664 84.426498 1.1488266 94.190125 4.7951813 102.35201 c
0.50086975 93.74028 -0.46398163 83.404739 0.18249512 73.871338 c
0.82897186 64.337952 4.0535736 54.048828 8.6800156 43.976135 c
13.806442 32.813904 16.97345 26.614471 25.903946 21.827698 c
34.834442 17.040924 47.443207 12.683655 57.031158 9.4809265 c
66.493698 6.3199158 78.153458 3.3834229 89.243484 1.9061279 c
100.33347 0.42883301 110.32587 0.18930054 121.40851 0.036407471 c
139.89847 -0.21868896 157.60513 0.88409424 174.45142 2.8065186 c
49.355377 174.03963 m
59.478806 175.4146 71.392136 174.70151 82.781494 170.15898 c
82.889954 170.11038 l
83.052414 170.06035 l
87.180771 168.8886 91.746216 167.58276 96.134689 166.32802 c
96.577454 166.21976 l
96.84053 166.21487 l
113.71538 166.22812 131.00706 166.18953 148.85405 165.91521 c
149.32745 165.87601 l
149.81619 166.16077 l
149.92297 166.22234 150.02635 166.28168 150.13162 166.34187 c
153.4043 168.21333 156.8559 169.94673 160.2413 171.93471 c
163.62671 173.92268 168.03723 177.17485 170.69696 178.73453 c
176.01642 181.8539 183.94717 182.85017 191.36325 181.97325 c
198.77933 181.09633 205.49088 179.25212 211.27219 173.76439 c
217.05353 168.27664 215.83578 164.34756 215.23804 153.90356 c
215.24615 154.02261 l
214.87979 150.56538 214.53345 147.33887 214.17505 143.98358 c
213.74963 140.00047 213.31915 136.02512 212.88428 132.05548 c
212.76495 130.71976 l
213.68369 129.72281 l
223.24814 119.08812 233.02374 109.20213 239.10629 96.822937 c
242.14755 90.633331 243.62524 84.658997 243.64038 78.090637 c
243.65552 71.522278 242.82315 63.889099 241.50729 57.681824 c
238.96112 45.670319 231.94357 34.303619 221.26343 28.062378 c
215.92337 24.941742 209.40588 22.500916 202.93475 19.729279 c
196.46362 16.957642 191.47397 14.962341 185.32846 13.888031 c
169.54303 11.128296 149.77213 10.008362 132.23323 9.7367249 c
115.66165 9.4796448 99.651627 9.5071106 83.515198 12.31955 c
74.434647 13.902313 65.28331 16.301392 58.172363 18.629181 c
51.061447 20.95697 39.926773 24.776703 32.60202 28.119781 c
27.877731 30.276031 26.237091 31.115692 24.245667 33.538574 c
22.25425 35.961456 19.429184 40.558899 16.869759 45.717896 c
11.750923 56.035858 8.3638535 66.583374 7.9448318 76.286758 c
8.2430954 66.397522 11.663513 55.525452 16.785736 45.072235 c
19.346848 39.845612 22.1707 35.230377 24.088242 32.906311 c
26.005783 30.582245 28.159988 29.397888 33.123489 27.141663 c
40.806503 23.649475 51.396469 19.94516 58.591751 17.559509 c
65.787033 15.173859 74.906647 12.75116 84.066589 11.142487 c
100.34349 8.283905 115.16028 8.2434998 131.75925 8.4024963 c
149.32919 8.571228 167.54291 9.620575 183.83261 12.08667 c
190.17581 13.046967 195.33115 14.644073 201.67892 17.443054 c
208.0267 20.242035 214.64304 22.614563 220.33862 25.669495 c
231.72977 31.779327 239.28107 42.693665 242.62558 55.246033 c
246.13284 68.409363 247.25113 83.283951 241.09177 96.42804 c
234.9324 109.57214 224.61676 119.89871 214.79062 130.75607 c
214.33527 131.28226 l
214.3923 131.9184 l
214.77353 135.50168 215.1496 139.08066 215.51971 142.65411 c
215.90698 146.39392 216.29382 150.14108 216.67917 153.8923 c
216.67535 153.83775 l
217.2254 163.89543 218.23157 169.09398 212.10812 174.81586 c
205.98465 180.53775 198.8728 182.41599 191.15515 183.22502 c
183.4375 184.03406 175.40634 182.91154 169.76685 179.44859 c
166.94708 177.71712 162.61218 174.51428 159.28915 172.5598 c
155.96613 170.60532 152.59769 168.88602 149.34396 166.98083 c
149.07745 166.85843 l
148.86894 166.8614 l
148.80922 166.86192 148.74948 166.86243 148.68979 166.86295 c
130.93765 167.01578 113.66246 166.91583 96.850647 166.74579 c
96.577454 166.71976 l
96.290802 166.83549 l
91.885406 168.05074 87.335098 169.3058 83.169632 170.44156 c
83.014954 170.50101 l
82.936661 170.52637 l
71.358902 175.01312 59.392822 175.54555 49.355377 174.03963 c
22.166214 157.54692 m
24.73291 169.42549 25.689774 166.67015 25.427643 166.29617 c
25.165512 165.9222 22.328842 166.31906 32.940475 173.34834 c
41.069244 178.73289 49.441071 180.28557 58.57193 180.16922 c
67.702789 180.05287 75.892899 179.39067 85.138779 175.73804 c
84.833588 175.84915 l
87.470322 175.11061 89.86145 174.4451 92.411636 173.72798 c
94.278397 173.20306 96.116089 172.68553 97.933105 172.1725 c
96.95816 172.32867 l
109.62393 172.3804 121.3385 172.37091 134.76752 172.1701 c
139.55002 172.09854 144.08955 172.01956 148.9696 171.92336 c
146.83556 171.37872 l
152.12787 174.39951 155.72736 175.86836 162.14429 180.22014 c
168.56122 184.57191 171.31213 186.18927 178.5401 187.39095 c
192.99603 189.79428 204.80075 187.90724 215.23947 177.98132 c
218.72385 174.66808 221.22781 170.80524 221.64868 166.60213 c
222.06955 162.39902 221.23654 158.56058 220.92883 153.64317 c
220.9212 153.53226 l
220.91962 153.50679 l
220.0896 146.14987 219.24805 138.87335 218.38712 131.55527 c
217.72287 133.49333 l
222.89526 127.6489 228.47305 121.79935 233.20047 115.72588 c
239.33206 107.84879 245.50864 97.933502 247.61807 88.172791 c
249.72751 78.412079 248.23404 67.90744 246.30872 57.960205 c
244.48145 48.518951 239.21954 39.199554 233.36176 32.469604 c
227.50397 25.739655 218.29749 21.666473 209.17487 17.944336 c
199.82993 14.131958 191.19525 10.579071 181.1572 9.3803711 c
171.11914 8.1816711 160.06473 7.3143921 149.97145 6.7172852 c
127.2765 5.375 103.36574 5.135437 80.661987 9.5696411 c
66.577881 12.320618 55.087875 16.273041 40.600464 21.724213 c
33.356705 24.449829 26.618851 27.553009 23.896301 29.807648 c
21.173752 32.062286 18.36734 36.588013 15.164879 42.76535 c
10.85807 51.072784 7.1104126 60.671051 5.7062302 68.793976 c
4.3020477 76.916885 4.0761414 84.179718 6.1517029 93.500107 c
8.2272644 102.8205 13.171898 108.26546 17.112877 114.99718 c
21.053833 121.72887 24.51088 129.26312 28.151474 136.33305 c
24.183044 129.03053 20.461075 121.24068 16.210442 114.52972 c
14.085136 111.17427 11.711426 108.07419 9.6254654 104.533 c
7.5395279 100.99187 5.6210175 96.159424 4.8087082 92.023087 c
3.184082 83.750412 3.0341415 74.922119 4.6410675 66.4935 c
6.2479858 58.064911 10.460037 47.598053 14.83876 39.408142 c
18.09024 33.326691 19.944 29.967285 23.847687 27.181152 c
27.751373 24.39502 34.592346 21.486786 41.585846 18.82431 c
55.572845 13.49939 66.227158 9.6203918 80.544632 6.719696 c
103.62523 2.0432129 123.38826 2.191803 146.20947 3.0922852 c
166.51065 3.8933411 186.29825 3.8938904 203.7049 11.474609 c
212.20117 15.174683 222.04877 18.176056 230.09879 24.017181 c
238.1488 29.858307 243.73816 38.266022 247.62714 48.057068 c
251.72382 58.371094 253.00217 69.081116 252.6676 80.432129 c
252.33304 91.783127 246.94 103.33659 240.62589 112.48448 c
234.60593 121.20627 227.58423 128.42783 220.642 136.21809 c
222.36395 131.19371 l
223.19836 138.50227 224.08307 146.54099 224.81546 153.15262 c
224.83136 153.34476 l
224.83676 153.46448 l
225.08011 157.45583 225.76321 161.10965 225.60678 165.3557 c
225.45035 169.60172 223.39066 174.6411 220.58328 177.9086 c
215.64771 183.65323 208.30594 187.73293 201.8324 189.56433 c
195.35883 191.39575 188.06665 192.41432 180.45792 191.36261 c
165.24042 189.25917 155.55646 180.37149 145.14211 174.34328 c
149.03522 175.33685 l
143.59703 175.41125 138.22812 175.46948 132.9639 175.50888 c
121.85561 175.59209 108.99863 175.67448 97.023193 175.73148 c
98.933594 175.42554 l
94.516129 176.71512 90.222717 177.96516 86.196548 179.13327 c
86.088715 179.16455 85.992966 179.19211 85.872986 179.22711 c
86.514404 178.99361 l
75.417633 183.50888 64.791687 184.29091 54.041016 183.88333 c
43.290344 183.47575 30.599533 178.51149 23.978638 170.42381 c
20.186157 165.79138 18.262642 158.70512 17.697258 152.76997 c
17.131874 146.83484 17.950111 141.24257 18.81842 135.93011 c
20.555031 125.30519 22.323067 115.2413 17.654945 105.90083 c
21.458183 111.39856 22.700798 120.95592 21.713959 130.3242 c
20.727119 139.69249 19.571083 149.16347 21.9972 157.23409 c
f
1 sc
60.576599 149.22867 m
68.09259 140.9389 71.639496 125.5123 68.49884 114.77234 c
65.358185 104.03238 56.719284 102.04611 49.203308 110.33588 c
41.687317 118.62564 38.140411 134.05225 41.281067 144.79221 c
44.421707 155.53215 53.060608 157.51842 60.576599 149.22867 c
f*
0.25 w
0 sc
1 0 0 -1 -154.61005 405.28226 cm
215.18665 256.05359 m
222.70264 264.34335 226.24954 279.76996 223.10889 290.50992 c
219.96823 301.24988 211.32933 303.23615 203.81335 294.94638 c
196.29736 286.65662 192.75046 271.23001 195.89111 260.49005 c
199.03175 249.75011 207.67065 247.76384 215.18665 256.05359 c
S
1 sc
CM
193.86346 150.87907 m
193.53888 139.08673 185.90033 123.43964 176.80228 115.93033 c
167.70422 108.42099 160.59189 111.89307 160.91647 123.68539 c
161.24106 135.47775 168.87961 151.12485 177.97766 158.63417 c
187.07574 166.14349 194.18805 162.67142 193.86346 150.87907 c
f*
0 sc
1 0 0 -1 -154.61005 405.28226 cm
348.47351 254.40318 m
348.14893 266.19553 340.51038 281.84262 331.41232 289.35193 c
322.31427 296.86127 315.20193 293.38919 315.52652 281.59686 c
315.8511 269.8045 323.48965 254.15741 332.58771 246.64809 c
341.68579 239.13876 348.7981 242.61084 348.47351 254.40318 c
S
/Cs1 SC
0.43548387 0.43548387 0.43548387 sc
CM
187.07745 162.59476 m
184.51163 162.72693 181.39548 161.44202 177.9837 158.62601 c
176.32397 157.25613 174.72949 155.55847 173.20245 153.71976 c
172.71484 149.51334 173.60742 145.11124 176.26495 141.87601 c
180.71698 136.45633 187.89029 136.42548 192.38995 141.75101 c
193.25162 144.90607 193.77966 148.00485 193.8587 150.87601 c
194.06158 158.24622 191.35382 162.37445 187.07745 162.59476 c
h
187.07745 162.59476 m
f*
1 w
/Cs2 SC
0 sc
1 0 0 -1 -154.61005 405.28226 cm
341.6875 242.6875 m
339.12167 242.55533 336.00552 243.84024 332.59375 246.65625 c
330.93402 248.02612 329.33954 249.72379 327.8125 251.5625 c
327.32489 255.76892 328.21747 260.17102 330.875 263.40625 c
335.32703 268.82593 342.50034 268.85678 347 263.53125 c
347.86166 260.37619 348.38971 257.2774 348.46875 254.40625 c
348.67163 247.03604 345.96387 242.90781 341.6875 242.6875 c
h
341.6875 242.6875 m
S
/Cs1 SC
0.43548387 0.43548387 0.43548387 sc
CM
51.389954 153.78226 m
48.446838 153.78223 45.510468 152.42215 43.264954 149.68851 c
38.773865 144.22125 38.773895 135.34335 43.264954 129.87601 c
47.756012 124.40878 55.023926 124.40869 59.514954 129.87601 c
63.681519 134.94824 63.798126 142.84995 60.233704 148.34476 c
60.002869 148.62234 59.816376 148.95624 59.577454 149.21976 c
57.839325 151.13681 56.04129 152.4455 54.264954 153.28226 c
53.316681 153.58136 52.363464 153.78226 51.389954 153.78226 c
h
51.389954 153.78226 m
f*
/Cs2 SC
0 sc
1 0 0 -1 -154.61005 405.28226 cm
206 251.5 m
203.05688 251.50003 200.12051 252.86011 197.875 255.59375 c
193.38391 261.061 193.38394 269.9389 197.875 275.40625 c
202.36606 280.87347 209.63397 280.87357 214.125 275.40625 c
218.29156 270.33401 218.40817 262.43231 214.84375 256.9375 c
214.61292 256.65991 214.42642 256.32602 214.1875 256.0625 c
212.44937 254.14545 210.65134 252.83676 208.875 252 c
207.92673 251.7009 206.97351 251.5 206 251.5 c
h
206 251.5 m
S
2.4999998 w
1 J
1 j
207.5 335.5 m
206.5 353.5 l
196.5 366.5 l
196.5 366.5 l
S
345.5 335.5 m
336.5 358.5 l
345.5 376.5 l
S
CM
49.54361 53.224182 m
48.885437 53.833893 52.223495 52.533508 52.269089 52.509399 c
57.277161 49.862396 62.586929 46.470886 67.865479 44.070831 c
73.144028 41.670776 78.866058 40.68222 82.946579 39.378998 c
88.791916 37.512146 94.266602 34.907898 101.34599 33.641571 c
108.42538 32.375244 115.79637 32.498566 122.45195 32.977112 c
126.0717 33.237366 129.12184 32.727692 134.30498 32.942749 c
145.54156 33.408997 159.12115 33.541931 167.46249 39.345032 c
173.88528 43.813416 181.26947 47.382904 182.9144 47.745941 c
185.17969 48.24588 172.8768 39.84375 167.45541 36.150879 c
161.51331 32.103302 158.58539 32.611176 152.58426 32.201752 c
142.67601 31.525787 128.53076 30.983734 117.88211 31.098236 c
109.11374 31.192505 99.927994 31.748016 93.788773 34.300415 c
87.103653 37.079803 76.671906 38.826233 68.978897 42.70636 c
63.664581 45.386749 54.411224 50.432526 49.543976 53.228577 c
f
ep
end
%%Trailer
%%EOF
