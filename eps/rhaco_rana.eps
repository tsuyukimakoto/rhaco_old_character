%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 257 192
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 257 192
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.88709676 0.21647286 0.11345878 sc
q
0 0 256.26007 191.78677 rc
22.889969 124.78226 m
22.556625 134.44894 20.051987 144.28607 21.889969 153.78226 c
23.889969 164.11557 26.905533 168.12466 34.889969 172.78226 c
42.889969 177.44894 49.889969 178.11557 57.889969 177.78226 c
67.292221 177.3905 75.223297 176.44894 83.889969 172.78226 c
88.223297 171.44894 92.556641 170.11557 96.889969 168.78226 c
114.22328 168.44894 131.55666 168.11557 148.88997 167.78226 c
153.55663 170.44894 158.44539 172.75992 162.88997 175.78226 c
171.22331 181.44894 171.89998 182.34384 180.88997 183.78226 c
189.22331 185.11557 197.55663 183.44894 204.88997 180.78226 c
208.87718 179.33237 214.66643 174.39554 216.88997 170.78226 c
219.55663 166.44894 218.22331 161.11557 217.88997 153.78226 c
217.22331 146.44894 216.55663 139.11557 215.88997 131.78226 c
220.55663 126.78226 225.40208 121.94333 229.88997 116.78226 c
236.55663 109.11557 244.22331 98.448944 246.88997 87.782257 c
249.15361 78.72757 247.88997 69.115631 246.88997 59.782257 c
245.7614 49.249054 240.22331 38.448883 233.88997 30.782257 c
225.98933 21.218353 212.55663 17.115631 201.88997 11.782257 c
190.02031 5.8474426 176.88997 5.4488831 162.88997 3.7822571 c
140.71077 1.1418762 117.22328 1.1156311 95.889969 2.7822571 c
81.218857 3.9284363 64.223297 8.4488831 52.889969 12.782257 c
41.886459 16.989532 26.153076 22.297943 20.889969 27.782257 c
16.200027 32.669342 8.2233124 48.448883 4.8899689 61.782257 c
2.3837738 71.807037 2.5232391 82.723602 4.8899689 92.782257 c
7.5566254 104.11557 14.223312 109.44894 18.889969 117.78226 c
h
22.889969 124.78226 m
f*
/Cs2 SC
0 sc
243.03972 114.4166 m
248.00914 106.67125 253.536 96.519409 254.73943 85.195358 c
255.3766 79.201324 254.87178 73.307465 254.1515 67.613586 c
253.21904 60.244049 251.97856 51.942322 248.68065 44.439453 c
245.07213 36.230408 240.54994 29.007446 233.87508 23.216278 c
227.20018 17.425079 219.44884 14.120911 212.80309 11.163544 c
219.02013 13.535583 226.30534 16.288727 233.05855 21.395721 c
239.81175 26.502716 244.75114 33.405304 248.75334 41.410858 c
252.40959 48.724731 254.13689 57.031525 255.12563 64.427246 c
255.88921 70.139313 256.56439 76.043884 256.11646 82.395981 c
255.27077 94.391388 249.11021 105.96451 243.03972 114.4166 c
25.185318 131.70145 m
24.139526 140.18921 22.608345 147.79858 24.782486 156.98058 c
25.869553 161.57156 27.260437 164.42555 29.865189 167.0571 c
32.46994 169.68864 37.083954 172.61707 41.302689 174.29556 c
47.947388 176.93921 54.72905 176.97295 62.18663 176.59692 c
69.644211 176.2209 76.330994 175.23671 83.672882 172.26852 c
83.639969 172.26663 l
83.725891 172.24924 l
88.0159 171.00862 92.410706 169.73511 96.792862 168.4666 c
96.889969 168.45218 l
96.883621 168.45204 l
98.916504 168.44696 100.95502 168.44197 102.9995 168.43723 c
112.41608 168.41505 129.93114 168.19684 148.89235 167.90591 c
148.82861 167.88966 l
151.79649 169.60098 154.90297 171.18987 157.92238 172.91338 c
160.94176 174.63689 164.66933 177.26071 167.58836 179.20227 c
170.5074 181.14383 172.40257 182.1357 175.34184 182.90263 c
178.28111 183.66957 182.47594 184.34813 185.72154 184.44536 c
198.70399 184.83429 208.73055 179.81769 213.76076 174.78282 c
219.04527 169.49345 218.44453 163.84157 218.01656 153.77829 c
218.01497 153.78226 l
218.01631 153.77219 l
217.38332 146.50801 216.7556 139.02151 216.15825 131.75783 c
216.08687 131.966 l
223.88673 123.75189 231.32259 116.43452 236.71288 109.1517 c
233.24654 114.07162 225.85884 122.34138 216.67125 132.51112 c
216.95396 131.68524 l
217.68877 138.53479 218.50352 146.16357 219.30565 153.65355 c
219.31184 153.71976 l
219.31004 153.71727 l
219.82893 162.64673 220.97466 169.37888 215.65221 175.14691 c
210.32973 180.91496 203.31285 183.79012 196.79152 185.23256 c
190.27019 186.675 183.69041 186.58473 177.81544 185.53139 c
171.94044 184.47804 169.52715 183.01527 166.89388 181.2971 c
163.94701 179.3743 160.21211 176.69693 157.19173 174.95662 c
154.17134 173.21631 150.89581 171.53987 147.77626 169.73193 c
148.93314 170.02718 l
132.96495 170.23706 116.68513 170.35623 100.84021 170.36862 c
99.535263 170.36966 98.228516 170.37016 96.920502 170.37015 c
97.35704 170.30022 l
93.004654 171.54825 88.730804 172.76508 84.273941 174.03017 c
84.398117 173.98497 l
76.25885 177.23151 68.807922 178.10329 60.631882 178.33212 c
52.455826 178.56096 45.421158 178.04857 38.341507 174.45343 c
34.072311 172.28532 30.117813 169.37282 27.892593 166.49184 c
25.667374 163.61086 24.503754 160.28389 23.643158 155.39195 c
21.921974 145.60808 23.942062 139.45509 25.185318 131.70145 c
174.45146 2.8065186 m
158.37248 1.7003174 140.62117 0.72625732 122.384 1.2217407 c
111.96648 1.5046997 101.77562 1.8123779 90.485214 3.2942505 c
79.194763 4.776123 67.033646 7.8731079 57.654907 11.005188 c
48.151932 14.178741 34.500107 18.833679 25.698486 23.736389 c
21.297676 26.187744 19.360069 28.237579 16.759674 32.10611 c
14.159256 35.97467 11.32428 41.212006 8.8461761 46.697876 c
4.3592072 56.631683 1.5445175 66.217072 0.92658234 75.321777 c
0.30864716 84.426483 1.148819 94.190186 4.7951889 102.35205 c
0.50086212 93.740356 -0.463974 83.404724 0.18250275 73.871338 c
0.82897949 64.337952 4.0535812 54.048798 8.6800308 43.976135 c
13.806465 32.813904 16.973495 26.614471 25.904007 21.827698 c
34.834518 17.040924 47.443298 12.683563 57.031235 9.4808655 c
66.493759 6.3198853 78.153564 3.3833618 89.243561 1.9060974 c
100.33351 0.42883301 110.32593 0.18933105 121.40857 0.036407471 c
139.89853 -0.21871948 157.60518 0.88409424 174.45146 2.8065186 c
49.355377 174.03963 m
59.478821 175.4146 71.39212 174.70158 82.781509 170.159 c
82.889969 170.11038 l
83.052399 170.06038 l
87.180801 168.88863 91.746216 167.58272 96.134735 166.328 c
96.452469 166.22171 l
96.840546 166.21489 l
113.71552 166.22813 131.32935 166.18335 148.85406 165.91522 c
149.38997 165.90726 l
149.81622 166.16077 l
149.92107 166.22122 150.02638 166.28169 150.13164 166.34187 c
153.40431 168.21333 156.85588 169.94672 160.24129 171.93468 c
163.62672 173.92265 168.03719 177.17487 170.69691 178.73454 c
176.0164 181.85391 183.94725 182.85011 191.3633 181.97322 c
198.77934 181.09633 205.49086 179.25215 211.2722 173.7644 c
217.05354 168.27664 215.8358 164.34756 215.23805 153.90356 c
215.24617 154.02261 l
214.87981 150.56538 214.53346 147.33891 214.17506 143.98363 c
213.74965 140.00052 213.31917 136.02513 212.88429 132.05548 c
212.76497 130.71976 l
213.6837 129.72281 l
223.24815 119.08812 233.02373 109.20215 239.10628 96.822952 c
242.14754 90.633347 243.62526 84.658981 243.6404 78.090637 c
243.65553 71.522278 242.82323 63.88913 241.50734 57.681854 c
238.96114 45.670349 231.94362 34.30365 221.26347 28.062408 c
215.92342 24.941803 209.40593 22.500916 202.9348 19.729279 c
196.46367 16.957642 191.47414 14.962311 185.3286 13.888 c
169.54317 11.128265 149.77217 10.008423 132.23328 9.7367554 c
115.66168 9.4796753 99.651718 9.5069885 83.515289 12.319458 c
74.434738 13.902252 65.283371 16.301392 58.172424 18.62915 c
51.061508 20.956909 39.926834 24.776733 32.602066 28.119781 c
27.877762 30.276031 26.237122 31.115692 24.245697 33.538574 c
22.254288 35.961456 19.429161 40.55896 16.869743 45.717957 c
11.750923 56.035889 8.3638535 66.583374 7.9448318 76.286758 c
8.2430954 66.397522 11.663521 55.525452 16.785744 45.072235 c
19.346855 39.845642 22.170753 35.230316 24.088303 32.90625 c
26.005844 30.582184 28.160034 29.397858 33.12355 27.141663 c
40.806595 23.649506 51.396469 19.94519 58.591766 17.559509 c
65.787064 15.173828 74.906677 12.75116 84.06662 11.142487 c
100.34352 8.2839355 115.16039 8.2434692 131.75935 8.4024658 c
149.3293 8.571167 167.54292 9.6205444 183.83263 12.08667 c
190.1758 13.046967 195.33122 14.644073 201.679 17.443085 c
208.02678 20.242096 214.64308 22.614624 220.33867 25.669556 c
231.72981 31.779388 239.28108 42.693665 242.62556 55.246094 c
246.13283 68.409454 247.25121 83.283981 241.09178 96.428101 c
234.93236 109.57222 224.61678 119.89873 214.79063 130.75607 c
214.33528 131.28226 l
214.39232 131.9184 l
214.77354 135.50169 215.14964 139.08069 215.51976 142.65414 c
215.907 146.39392 216.28819 150.07956 216.67912 153.89233 c
216.67543 153.8378 l
217.23299 164.06032 218.23158 169.09401 212.10814 174.81589 c
205.98466 180.53778 198.87279 182.41602 191.15514 183.22505 c
183.43748 184.03409 175.40636 182.91151 169.76686 179.44856 c
166.94713 177.71709 162.6122 174.51427 159.28917 172.5598 c
155.96614 170.60533 152.59767 168.88602 149.34398 166.98083 c
149.13997 166.85648 l
148.86894 166.8614 l
148.80922 166.86192 148.74951 166.86241 148.6898 166.86293 c
130.93765 167.01575 113.66252 166.91586 96.850693 166.74577 c
96.577469 166.71976 l
96.290848 166.83553 l
91.885376 168.05074 87.335114 169.3058 83.169617 170.44157 c
83.014969 170.50101 l
82.936676 170.5264 l
71.358994 175.01314 59.392838 175.54555 49.355377 174.03963 c
22.166245 157.54691 m
24.732925 169.42546 25.689774 166.67015 25.427643 166.29617 c
25.165512 165.9222 22.328873 166.31908 32.940491 173.34834 c
41.069244 178.73288 49.441101 180.28558 58.57196 180.16924 c
67.70282 180.05289 75.892929 179.39072 85.138824 175.73802 c
84.833603 175.84914 l
87.470322 175.11061 89.861465 174.4451 92.411636 173.72798 c
94.278397 173.20306 96.116104 172.68553 97.933121 172.1725 c
96.95816 172.32867 l
109.62386 172.38042 121.33849 172.37091 134.7675 172.1701 c
139.55 172.09854 144.27747 172.01595 148.9696 171.92336 c
146.83556 171.37872 l
151.92412 174.28311 155.72734 175.86838 162.1443 180.22015 c
168.56126 184.57193 171.31218 186.18924 178.54008 187.39095 c
192.9959 189.79436 204.80067 187.90726 215.23943 177.98135 c
218.72383 174.66809 221.22786 170.80524 221.64873 166.60211 c
222.0696 162.39899 221.23656 158.56056 220.92885 153.64317 c
220.92903 153.59476 l
220.91963 153.50679 l
220.08965 146.14992 219.24806 138.87334 218.38713 131.55527 c
217.72289 133.49333 l
222.89528 127.64891 228.47301 121.79935 233.20042 115.72589 c
239.33199 107.84882 245.50865 97.933502 247.61809 88.172791 c
249.72752 78.412079 248.23415 67.90741 246.30879 57.960205 c
244.48146 48.518982 239.21953 39.199524 233.36177 32.469604 c
227.50401 25.739685 218.29756 21.666473 209.17491 17.944366 c
199.82994 14.131989 191.1953 10.579071 181.15721 9.3803406 c
171.11913 8.1816101 160.06474 7.3144226 149.97147 6.7172852 c
127.27655 5.3749695 103.36589 5.135376 80.662109 9.5695801 c
66.577988 12.320587 55.087997 16.27301 40.600555 21.724182 c
33.356796 24.449799 26.618896 27.552979 23.896332 29.807617 c
21.173775 32.062256 18.367363 36.588013 15.164909 42.76532 c
10.858109 51.072723 7.1104202 60.671021 5.7062378 68.793945 c
4.3020554 76.91687 4.0761948 84.179657 6.1517334 93.500061 c
8.227272 102.82047 13.171928 108.26541 17.112892 114.99718 c
21.053833 121.7289 24.510895 129.26312 28.151489 136.33305 c
24.18306 129.03053 20.461075 121.24066 16.210449 114.52972 c
14.085152 111.17427 11.711433 108.07419 9.6254654 104.53302 c
7.5395203 100.99188 5.621048 96.159439 4.8087311 92.023087 c
3.1840973 83.750397 3.0341568 74.922028 4.6410828 66.493439 c
6.2480011 58.064911 10.46006 47.597931 14.838783 39.408081 c
18.090271 33.32666 19.944046 29.967224 23.847733 27.181122 c
27.751419 24.39502 34.592407 21.486816 41.585907 18.824371 c
55.572906 13.499451 66.227264 9.6202698 80.544739 6.719574 c
103.62535 2.0430603 123.38834 2.1917725 146.20955 3.0922241 c
166.51073 3.89328 186.29832 3.8939514 203.705 11.47464 c
212.20128 15.174683 222.04875 18.176086 230.09877 24.017242 c
238.14879 29.858398 243.73817 38.266052 247.62718 48.057098 c
251.72386 58.371124 253.00218 69.081116 252.66762 80.432144 c
252.33305 91.783142 246.93999 103.33662 240.62584 112.48453 c
234.60588 121.20633 227.42552 128.59778 220.64201 136.21805 c
222.36397 131.19368 l
223.18358 138.33897 224.08311 146.54102 224.81544 153.15263 c
224.83138 153.34476 l
224.83678 153.46443 l
225.08015 157.4558 225.76326 161.10968 225.6068 165.35571 c
225.45033 169.60178 223.3907 174.64111 220.5833 177.90863 c
215.64772 183.65327 208.30595 187.73293 201.83238 189.56433 c
195.35881 191.39574 188.0667 192.41432 180.45796 191.36263 c
165.24049 189.25922 155.55644 180.37154 145.14211 174.34328 c
149.0352 175.33688 l
143.59703 175.41127 138.22812 175.4695 132.9639 175.5089 c
121.85561 175.5921 108.99846 175.6745 97.023193 175.73148 c
98.933594 175.42554 l
94.516174 176.71507 90.222763 177.96516 86.196518 179.13327 c
86.088684 179.16455 85.99292 179.19212 85.872955 179.22713 c
86.514404 178.99362 l
75.417648 183.50894 64.791733 184.29086 54.041046 183.88333 c
43.290344 183.4758 30.599548 178.51151 23.978653 170.42381 c
20.186172 165.79138 18.262657 158.70511 17.697281 152.76996 c
17.131905 146.83481 17.950134 141.2426 18.818436 135.93013 c
20.555038 125.30519 22.323097 115.24113 17.6549 105.9008 c
21.458183 111.39842 22.700813 120.95592 21.713974 130.3242 c
20.727135 139.69249 19.571075 149.16353 21.9972 157.23412 c
f
1 sc
60.576614 149.22867 m
68.092606 140.9389 71.639511 125.5123 68.498856 114.77234 c
65.3582 104.03238 56.719299 102.04611 49.203323 110.33588 c
41.687332 118.62564 38.140427 134.05225 41.281082 144.79221 c
44.421722 155.53214 53.060623 157.5184 60.576614 149.22867 c
f*
0.25 w
0 sc
1 0 0 -1 -146.61003 467.28226 cm
207.18665 318.05359 m
214.70264 326.34335 218.24954 341.76996 215.10889 352.50992 c
211.96823 363.24988 203.32933 365.23615 195.81335 356.94638 c
188.29736 348.65662 184.75046 333.23001 187.89111 322.49005 c
191.03175 311.75012 199.67065 309.76385 207.18665 318.05359 c
S
1 sc
CM
193.86348 150.87909 m
193.53889 139.08673 185.90034 123.43964 176.80229 115.93033 c
167.70424 108.42099 160.5919 111.89307 160.91649 123.68539 c
161.24107 135.47775 168.87962 151.12485 177.97768 158.63416 c
187.07576 166.14349 194.18806 162.67142 193.86348 150.87909 c
f*
0 sc
1 0 0 -1 -146.61003 467.28226 cm
340.47351 316.40317 m
340.14893 328.19553 332.51038 343.84262 323.41232 351.35193 c
314.31427 358.86127 307.20193 355.38919 307.52652 343.59686 c
307.8511 331.8045 315.48965 316.15741 324.58771 308.6481 c
333.68579 301.13876 340.7981 304.61084 340.47351 316.40317 c
S
/Cs1 SC
0.43548387 0.43548387 0.43548387 sc
CM
187.07747 162.59476 m
184.51164 162.72693 181.39549 161.44202 177.98372 158.62601 c
176.32399 157.25613 174.72951 155.55847 173.20247 153.71976 c
172.71486 149.51334 173.60744 145.11124 176.26497 141.87601 c
180.717 136.45633 187.8903 136.42548 192.38997 141.75101 c
193.25163 144.90607 193.77968 148.00485 193.85872 150.87601 c
194.0616 158.24622 191.35384 162.37445 187.07747 162.59476 c
h
187.07747 162.59476 m
f*
1 w
/Cs2 SC
0 sc
1 0 0 -1 -146.61003 467.28226 cm
333.6875 304.6875 m
331.12167 304.55533 328.00552 305.84024 324.59375 308.65625 c
322.93402 310.02612 321.33954 311.72379 319.8125 313.5625 c
319.32489 317.76892 320.21747 322.17102 322.875 325.40625 c
327.32703 330.82593 334.50034 330.85678 339 325.53125 c
339.86166 322.37619 340.38971 319.2774 340.46875 316.40625 c
340.67163 309.03604 337.96387 304.90781 333.6875 304.6875 c
h
333.6875 304.6875 m
S
/Cs1 SC
0.43548387 0.43548387 0.43548387 sc
CM
51.389969 153.78226 m
48.446854 153.78223 45.510483 152.42215 43.264969 149.68851 c
38.77388 144.22125 38.773911 135.34335 43.264969 129.87601 c
47.756027 124.40878 55.023941 124.40869 59.514969 129.87601 c
63.681534 134.94824 63.798141 142.84995 60.233719 148.34476 c
60.002884 148.62234 59.816391 148.95624 59.577469 149.21976 c
57.83934 151.13681 56.041306 152.4455 54.264969 153.28226 c
53.316696 153.58136 52.36348 153.78226 51.389969 153.78226 c
h
51.389969 153.78226 m
f*
/Cs2 SC
0 sc
1 0 0 -1 -146.61003 467.28226 cm
198 313.5 m
195.05688 313.50003 192.12051 314.86011 189.875 317.59375 c
185.38391 323.061 185.38394 331.9389 189.875 337.40625 c
194.36606 342.87347 201.63397 342.87357 206.125 337.40625 c
210.29156 332.33401 210.40817 324.43231 206.84375 318.9375 c
206.61292 318.65991 206.42642 318.32602 206.1875 318.0625 c
204.44937 316.14545 202.65134 314.83676 200.875 314 c
199.92673 313.7009 198.97351 313.5 198 313.5 c
h
198 313.5 m
S
2.4999998 w
1 J
1 j
199.5 397.5 m
198.5 415.5 l
188.5 428.5 l
188.5 428.5 l
S
337.5 397.5 m
328.5 420.5 l
337.5 438.5 l
S
CM
49.543625 53.224182 m
48.885452 53.833893 52.223511 52.533508 52.269104 52.509399 c
57.277176 49.862396 62.586945 46.470917 67.865494 44.070862 c
73.144043 41.670807 78.866089 40.68222 82.946609 39.378998 c
88.791946 37.512146 94.266617 34.907898 101.34601 33.641571 c
108.4254 32.375244 115.79639 32.498566 122.45197 32.977112 c
126.07172 33.237366 129.12186 32.727692 134.30499 32.942749 c
145.54158 33.408997 159.12117 33.541931 167.46251 39.345032 c
173.8853 43.813416 181.26949 47.382904 182.91441 47.745941 c
185.1797 48.24588 172.87682 39.84375 167.45543 36.150879 c
161.51332 32.103302 158.5854 32.611176 152.58427 32.201752 c
142.67603 31.525757 128.53078 30.983734 117.88213 31.098236 c
109.11375 31.192505 99.928009 31.747986 93.788788 34.300415 c
87.103668 37.079803 76.671906 38.826263 68.978912 42.70636 c
63.664597 45.386749 54.41124 50.432526 49.543976 53.228577 c
f
ep
end
%%Trailer
%%EOF
